{"version":3,"sources":["pathfinderComponents/node.jsx","pathfinderComponents/grid.jsx","pathfinderComponents/simpleSelect.jsx","pathfinderComponents/navbar.jsx","pathfinderComponents/menu.jsx","algorithms/dijkstra.js","algorithms/recursiveMaze.js","algorithms/bfs.jsx","pathfinderComponents/pathfinder.jsx","algorithms/randomMaze.js","homeComponents/navbar.jsx","homeComponents/greet.jsx","homeComponents/typewriter.jsx","homeComponents/images/graph.png","homeComponents/card.jsx","homeComponents/card2.jsx","homeComponents/images/primes.jpg","homeComponents/sort.png","homeComponents/images/queen.PNG","homeComponents/images/binaryTree.png","homeComponents/images/convexHull.png","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/footer.jsx","homeComponents/home.jsx","primeComponents/cell.jsx","primeComponents/cells.jsx","primeComponents/navbar.jsx","primeComponents/slider.jsx","primeComponents/simpleSelect.jsx","primeComponents/menu.jsx","primeComponents/seive.jsx","sortComponents/rect.jsx","sortComponents/rects.jsx","algorithms/sortingAlgorithms.js","algorithms/quickSort.js","sortComponents/navbar.jsx","sortComponents/slider.jsx","sortComponents/simpleSelect.jsx","sortComponents/airBnbSlider.jsx","sortComponents/doubleSlider.jsx","sortComponents/formControlLabel.jsx","sortComponents/menu.jsx","sortComponents/sort.js","queenComponents/queen.png","queenComponents/cell.jsx","queenComponents/cells.jsx","queenComponents/navbar.jsx","queenComponents/slider.jsx","queenComponents/menu.jsx","queenComponents/queen.jsx","convexHullComponents/timer.jsx","algorithms/grahamScan.js","convexHullComponents/canvas.jsx","convexHullComponents/navbar.jsx","convexHullComponents/slider.jsx","convexHullComponents/menu.jsx","convexHullComponents/convexHull.jsx","binarySearchComponent/entryPoint.jsx","binarySearchComponent/doubleSlider.jsx","binarySearchComponent/guess.jsx","binarySearchComponent/result.jsx","binarySearchComponent/search.jsx","binarySearchComponent/navbar.jsx","binarySearchComponent/binarySearch.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/rects.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/simpleSelect.jsx","recursiveSortComponents/airBnbSlider.jsx","recursiveSortComponents/doubleSlider.jsx","recursiveSortComponents/menu.jsx","recursiveSortComponents/recursiveSort.js","App.js","index.js"],"names":["Node","static","row","props","col","this","onMouseDown","isVisited","onMouseEnter","onMouseUp","id","className","getClassName","node","isWall","isStartNode","isEndNode","ispathNode","Component","Grid","state","grid","map","rowidx","nodeidx","visitedNode","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","setAge","FormControl","InputLabel","Select","labelId","value","onChange","event","target","onAlgoChanged","items","item","itemidx","MenuItem","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","style","color","Menu","algorithms","onMazeChanged","mazes","onClick","onCreateMaze","onVisualize","onClearPath","onClearBoard","dijkstra","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","push","getAllNodes","length","sortNodesByDistance","closestNode","shift","Infinity","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","decideMaze","pairs","board","startRow","endRow","startCol","endCol","mid","Math","floor","random","start","end","i","xx","yy","recursiveMazeVertical","recursiveMazeHorizontal","bfsdfs","endNode","algo","list","nodesInOrder","currentNode","pop","nodesToPush","getNeighbours","Pathfinder","handleMouseDown","newGrid","getNewGridWithWallToggled","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","handleMazeChanged","maze","handleCreateMaze","newBoard","slice","j","randomMaze","getMaze","setTimeout","document","getElementById","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizeDijkstra","width","window","innerWidth","height","innerHeight","max","console","log","getInitialGrid","textAlign","nodesInShortestPathOrder","unshift","getNodesInShortestPathOrder","animateDijkstra","sleep","animateShortestPath","toggleVisit","newNode","totRow","totCol","currentRow","createNode","ms","Promise","resolve","href","Greet","TypeWriterC","options","strings","autoStart","loop","card","maxWidth","minHeight","borderRadius","boxShadow","media","actionArea","padding","transition","transform","expand","marginLeft","transitions","create","duration","shortest","expandOpen","ImgMediaCard2","expanded","setExpanded","CardActionArea","m","Card","route","CardMedia","component","alt","title","src","img","CardHeader","backgroundColor","action","IconButton","clsx","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","cards","getData","e","graph","primes","queen","convex","binSearch","Fragment","TextField","label","toLowerCase","includes","Footer","class","data-show-count","data-icon","Home","Cell","getClass","cell","isVisiting","isChecking","isPrime","Cells","cells","cellidx","root","valuetext","DiscreteSlider","gutterBottom","Slider","defaultValue","default","getAriaValueText","aria-labelledby","valueLabelDisplay","onChangeCommitted","innerText","num","parseInt","step","marks","min","isDisabled","selected","isClickable","cursor","onRefresh","disabled","onChangeSpeed","onChangeValues","Seive","number","isRunning","speed","changeSpeed","handleValueIncease","getCells","handleRefresh","startSeive","a","prime","changedCells","prevCheck","getNewCellPrimeToggled","getNewCellVisitingToggled","getNewCellCheckToggled","pos","newCells","newCell","rows","createCell","Rect","checkColor","rect","isSorted","isSorting","background","marg","Rects","rects","rectidx","selectionSort","arr","n","prevRect","min_idx","changed","recti","rectj","bubbleSort","insertionSort","key","values","quickSort","rects2","sz","quick","left","right","partition","pivot","it","rect1","rect2","getPartition","onCountChange","disable","withStyles","thumb","border","marginRight","active","track","rail","opacity","CSlider","RangeSlider","setValue","newValue","SwitchLabels","checkedA","FormGroup","FormControlLabel","control","Switch","checked","name","onDoubleChange","onRandomize","onSpeedChange","onViusalize","Sort","count","doubles","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","handleDouble","handleCountChange","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","tot","getRect","isAttacked","isCurrent","isPresent","isChecked","getStyled","onClear","Queen","handleStop","handleSpeedChange","handleQueenChange","getBoard","handleClear","handleTurnOff","turnOffAttack","startAlgo","queensAlgo","newBoard2","result","getChecked","onStop","N","cols","getCell","cw","b","c","ccw","Canvas","dots","lines","canvasWidth","canvasHeight","animateLine","canvas2","canvasLineRef","current","ctx2","getContext","clearRect","fillStyle","strokeStyle","onGoing","beginPath","add","lineWidth","moveTo","from","arc","PI","fill","closePath","lineTo","stroke","onTurnOff","myRef","createRef","redrawDots","prevProps","prevState","snapshot","ref","canvas","ctx","res","points","size","pointStart","pointEnd","up","down","convex_hull","getNewDots","getDot","rowpos","ConvexHull","isALgoLive","handleRefreshDots","handleAlgoStateChanged","isAlgoLive","handleVisualize","handleMoreDot","dot","EntryPoint","error","setUpper","validateNumbers","variant","upper","startGame","lower","useEffect","Guess","getMid","justifyContent","yesButton","noButton","Result","onRestart","Search","BinarySearch","handleStartGame","handleRestart","handleYes","handleNo","handleSetUpper","isLeft","isRight","checkBorder","isRange","mergeSort","mergeS","l","r","n1","n2","L","R","k","merge","HeapSort","heapify","temp","sorted","heapSort","largest","quickSortRecursive","swap","changedRange","RecursiveSort","handleMerge","handleHeap","handleQuick","hasChanged","ii","App","basename","path","ReactDom","render"],"mappings":"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","file":"static/js/main.1a8d6284.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './node.css'\nclass Node extends Component {\n    static = {\n        row: this.props.row,\n        col: this.props.col\n    }\n    render() {\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\n        return (\n            <div\n                id = {`node-${this.props.row}-${this.props.col}`}\n                className={this.getClassName()}\n                onMouseDown={() => onMouseDown(row,col)}\n                onMouseEnter={() => onMouseEnter(row,col)}\n                onMouseUp={() => onMouseUp(row,col)}\n            />\n        );\n    }\n    getClassName(){\n        if(this.props.node.isWall === true){\n            return \"node node-wall\";\n        } else if( this.props.node.isStartNode === true ){\n            return \"node  node-start\";\n        } else if( this.props.node.isEndNode === true ){\n            return \"node  node-end\";\n        } else if(this.props.node.ispathNode){\n            return 'node node-shortest-path';\n        }else if( this.props.node.isVisited === true ){\n            return \"node  node-visited\";\n        } else{\n            return \"node\";\n        }\n    }\n}\n\nexport default Node;","import React, {Component} from 'react';\nimport Node from \"./node\";\nimport './grid.css';\nclass Grid extends Component {\n    state = {\n        grid: this.props.grid\n    }\n\n    render() {\n        return (\n            <div className=\"Grid\">\n                {this.props.grid.map((row, rowidx) => {\n                    return (\n                        <div key={rowidx}>\n                            {row.map((node, nodeidx) => {\n                                const {row, col, isWall, visitedNode, } = node;\n                                return (\n                                    <Node\n                                        key={nodeidx}\n                                        row={row}\n                                        col={col}\n                                        node={node}\n                                        isWall={isWall}\n                                        visitedNode={ visitedNode }\n                                        onMouseDown = {this.props.onMouseDown}\n                                        onMouseEnter = {this.props.onMouseEnter}\n                                        onMouseUp = {this.props.onMouseUp}\n                                    />\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n\n    const handleChange = (event) => {\n        setAge(event.target.value);\n        props.onAlgoChanged(event.target.value);\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    {props.items.map( (item,itemidx)=>{\n                        return(\n                            <MenuItem\n                                key={itemidx}\n                                value={itemidx}>{item}</MenuItem>\n                        );\n                    } )}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Pathfinder</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\" >\n                <SimpleSelect\n                    onAlgoChanged = {this.props.onAlgoChanged}\n                    items={this.props.algorithms}\n                />\n                <SimpleSelect\n                    onAlgoChanged={this.props.onMazeChanged}\n                    items={this.props.mazes}\n                />\n                <button\n                    className='btn btn-lg btn-secondary m-2'\n                    onClick={this.props.onCreateMaze}>\n                    Create Maze\n                </button>\n                <button\n                    onClick={this.props.onVisualize}\n                    className=\"btn btn-warning btn-lg\"\n                >Visualize</button>\n                <button\n                    onClick={this.props.onClearPath}\n                    className='btn btn-danger btn-lg m-2'>Clear Path</button>\n                <button\n                    onClick={this.props.onClearBoard}\n                    className='btn btn-danger btn-lg m-2'>Clear Board</button>\n            </nav>\n        );\n    }\n}\n\nexport default Menu;","// Performs Dijkstra's algorithm; returns *all* nodes in the order\n// in which they were visited. Also makes nodes point back to their\n// previous node, effectively allowing us to compute the shortest path\n// by backtracking from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n  while (!!unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n    // If we encounter a wall, we skip it.\n    if (closestNode.isWall) continue;\n    // If the closest node is at a distance of infinity,\n    // we must be trapped and should therefore stop.\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const {col, row} = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","export function getMaze(board,row,col){\n    const pairs = [];\n    let newBoard = board.slice();\n    for( let i = 0;i <col;i++){\n        newBoard[0][i].isWall = true;\n        pairs.push({\n            xx:0,\n            yy:i\n        });\n    }\n    for( let i = 0;i <row;i++){\n        newBoard[i][col-1].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:col-1\n        });\n    }\n    for( let i = col-1;i>=0;i-- ){\n        newBoard[row-1][i].isWall = true;\n        pairs.push({\n            xx:row-1,\n            yy:i\n        });\n    }\n    for(let i = row-1;i>=0;i--){\n        newBoard[i][0].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:0\n        });\n    }\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\n    //console.log(\"here\");\n    return pairs;\n}\nlet val = 0;\n\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\n    //console.log(\"count\");\n    val++;\n\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\n        return;\n    }\n\n     if( (endCol - startCol) > (endRow - startRow) ){\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\n    } else{\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\n    }\n}\nfunction recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endCol+startCol)/2);\n    let random = Math.floor(Math.random() * (endRow-startRow+1)) + startRow;\n    //console.log( \"row \",random,\" \",startRow,\" \",endRow );\n    let start = startRow;\n    if( !board[startRow-1][mid].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endRow;\n    if( !board[endRow+1][mid].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[i][mid].isWall = true;\n            pairs.push({\n                xx:i,\n                yy:mid\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,endRow,startCol,mid-1);\n    decideMaze(pairs,board,startRow,endRow,mid+1,endCol);\n}\nfunction recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endRow+startRow)/2);\n  //  console.log(\"mid: \",mid);\n    let random = Math.floor(Math.random() * (endCol-startCol+1)) + startCol;\n    let start = startCol;\n    if( !board[mid][startCol-1].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endCol;\n    if( !board[mid][endCol+1].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[mid][i].isWall = true;\n            pairs.push({\n                xx:mid,\n                yy:i\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,mid-1,startCol,endCol);\n    decideMaze(pairs,board,mid+1,endRow,startCol,endCol);\n\n}","export function bfsdfs(grid,startNode,endNode,algo){\n    var list = [];\n    const nodesInOrder = [];\n    nodesInOrder.push(startNode);\n    list.push(startNode);\n    startNode.isVisited = true;\n    while(!!list.length){\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\n        nodesInOrder.push(currentNode);\n        if( currentNode === endNode ) return nodesInOrder;\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\n        const nodesToPush = getNeighbours(grid,currentNode);\n        for( const node of nodesToPush ){\n            if(algo === \"bfs\"){\n                node.isVisited = true;\n            }\n            node.previousNode = currentNode;\n            list.push(node);\n\n        }\n    }\n    return nodesInOrder;\n}\n\nfunction getNeighbours(grid,node){\n    const neighbors = [];\n    const {col, row} = node;\n   // console.log(node);\n\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\n}","import React, {Component, Fragment} from 'react';\nimport Grid from \"./grid\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\nimport {getMaze} from \"../algorithms/recursiveMaze\";\nimport {bfsdfs} from \"../algorithms/bfs\";\nimport {randomMaze} from \"../algorithms/randomMaze\";\n\nclass Pathfinder extends Component {\n    constructor() {\n        super();\n        this.state = {\n            grid:[],\n            mouseIsPressed:false,\n            algorithms:[\n                \"Dijsktra\",\"BFS\",\"DFS\"\n            ],\n            algo:0,\n            mazes:[\n                \"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\n            ],\n            maze:0\n        }\n    }\n    componentDidMount() {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const row = Math.max(Math.floor(height/25)-7,10);\n        const col = Math.floor(width/25);\n        const startNode = {\n            row:4,\n            col:4\n        };\n        const endNode = {\n            row: row-5,\n            col: col-5\n        }\n        console.log( endNode.row );\n        const grid = getInitialGrid(row,col);\n        grid[startNode.row][startNode.col].isStartNode = true;\n        grid[row-5][col-5].isEndNode = true;\n        this.setState({grid,row,col,startNode,endNode});\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Navbar/>\n\n                <Menu\n                    onAlgoChanged = {this.handleAlgoChanged}\n                    onVisualize = {this.handleClick}\n                    algorithms={this.state.algorithms}\n                    mazes={this.state.mazes}\n                    onMazeChanged={this.handleMazeChanged}\n                    onCreateMaze={this.handleCreateMaze}\n                    onClearBoard={this.handleClearBoard}\n                    onClearPath={this.handleClearPath}\n                />\n                <span style={{margin: 2}}/>\n                <div style={{textAlign:\"center\"}} >\n                    <Grid\n                        grid={this.state.grid}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseUp={this.handleMouseUp}\n                    />\n                </div>\n            </Fragment>\n        );\n    }\n\n    handleMouseDown = (row, col) => {\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n        this.setState({mouseIsPressed: true});\n    }\n\n    handleMouseEnter = (row, col) => {\n        if (this.state.mouseIsPressed === false) return;\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n    }\n\n    handleMouseUp = (row,col) => {\n        this.setState({mouseIsPressed: false});\n    }\n\n    handleAlgoChanged = (val) =>{\n        this.setState({algo:val});\n    }\n\n    handleMazeChanged = (val)=>{\n        this.setState({maze:val});\n    }\n\n    handleCreateMaze = () =>{\n        let pairs;\n        switch (this.state.maze){\n            case 1:\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\n                break;\n            default:\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\n        }\n        const {startNode,endNode} = this.state;\n        for( let i = 0;i<pairs.length;i++ ){\n            setTimeout(()=>{\n                if( i === pairs.length-1 ){\n                   // this.setState({grid:this.state.grid});\n                    const grid = this.state.grid;\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\n                    this.setState({grid});\n                }\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\n                }\n            },i*20);\n        }\n    }\n    handleClearBoard = ()=>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearBoard(grid,row,col)});\n    }\n    handleClearPath = () =>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearPath(grid,row,col)});\n    }\n    handleClick = () =>{\n      /*  for(let i = 0;i<20;i++){\n            for(let j = 0; j<50;j++){\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\n            }\n        }*/\n        this.visualizeDijkstra();\n        /*for(let i = 0;i<this.state.row;i++){\n            for(let j = 0; j<this.state.col;j++){\n                setTimeout(()=>{\n                    const newGrid = toggleVisit(this.state.grid,i,j);\n                    this.setState({grid:newGrid});\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\n                },100*(i+j)+j);\n            }\n        }*/\n    }\n\n    visualizeDijkstra() {\n        const {grid} = this.state;\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\n        let visitedNodesInOrder;\n        switch (this.state.algo){\n            case 0:\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n                break;\n            case 1:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\n                break;\n            default:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\n        }\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n\n            if (i === visitedNodesInOrder.length) {\n              //  setTimeout(() => {\n                    await sleep(100);\n                    await this.animateShortestPath(nodesInShortestPathOrder);\n\n              //  }, 10 * (i+10));\n                return;\n            }\n           // setTimeout(() => {\n                const node = visitedNodesInOrder[i];\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\n                //this.setState({grid:newGrid});\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-visited';\n                await sleep(10);\n           // }, 10 * i);\n        }\n    }\n\n    async animateShortestPath(nodesInShortestPathOrder) {\n        const grid = this.state.grid;\n        const newGrid = grid.slice();\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n         //   setTimeout(() => {\n\n                const node = nodesInShortestPathOrder[i];\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\n                newGrid[node.row][node.col] = newNode;\n                if( i === nodesInShortestPathOrder.length-1 ){\n                    this.setState({grid:newGrid});\n                }\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-shortest-path';\n                await sleep(50);\n            //}, 50 * i);\n        }\n    }\n\n}\n\nconst clearPath = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\nconst clearBoard = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                isWall: false,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\n\nconst toggleVisit = (grid,row,col) =>{\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        visitedNode: !node.visitedNode\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n}\nconst getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        isWall: true//!node.isWall,\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n};\nconst getInitialGrid = (totRow,totCol) => {\n    const grid = [];\n    for (let row = 0; row < totRow; row++) {\n        const currentRow = [];\n        for (let col = 0; col < totCol; col++) {\n            currentRow.push(createNode(row,col));\n        }\n        grid.push(currentRow);\n    }\n    return grid;\n}\n\nconst createNode = (row,col)=>{\n    return {\n        row,\n        col,\n        isWall: false,\n        isStartNode:false,\n        isEndNode:false,\n        distance:Infinity,\n        visitedNode: false,\n        isVisited:false,\n        ispathNode:false,\n        previousNode:null\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Pathfinder;","export function randomMaze(board,row,col){\n    let newBoard = board.slice();\n    const pairs = [];\n    for(let i = 0;i<row;i++){\n        for( let j = 0;j <col;j++){\n            const random = Math.floor(Math.random()*100)+10;\n            if( random%4 === 0 ){\n                newBoard[i][j].isWall = true;\n                pairs.push({\n                    xx:i,\n                    yy:j\n                });\n            }\n        }\n    }\n    return pairs;\n}","import React, {Component} from 'react';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\n                <a className=\"navbar-brand\" href=\"#\">Algorithm Visualizer</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"#\">About <span className=\"sr-only\">(current)</span></a>\n                        </li>\n\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport \"./style.css\"\nclass Greet extends Component {\n    render() {\n        return (\n            <div className=\"greet\">\n                <h1 className=\"display-3\">\n                    Algorithm Visualizer\n                </h1>\n                <hr className=\"dropdown-divider\"/>\n                <h1 className=\"display-5\">\n                    Visualize algorithms for a better understanding\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default Greet;","import React, {Component} from 'react';\nimport Typewriter from \"typewriter-effect\";\nimport './style.css'\nclass TypeWriterC extends Component {\n    state = {\n\n    }\n    render() {\n        return (\n            <div className=\"type display-3\">\n                <span className=\"badge badge-dark\">\n                <Typewriter\n                    options={{\n                        strings: ['Graph Algorithms', 'Sorting Algorithms',\"8 Queen\"],\n                        autoStart: true,\n                        loop: true,\n                    }}\n                />\n            </span>\n            </div>\n        );\n    }\n}\n\nexport default TypeWriterC;","export default __webpack_public_path__ + \"static/media/graph.6e6849d5.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:250,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 140\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n});\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    src={props.card.img}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\"  >\n                        {props.card.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.card.description}\n                    </Typography>\n                    <ExpandMore/>\n                </CardContent>\n            </Card>\n        </CardActionArea>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:200,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 100\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n}));\n\nexport default function ImgMediaCard2(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n               <Link to={props.card.route}>\n                   <CardMedia\n                       component=\"img\"\n                       alt={props.card.title}\n                       height=\"150\"\n                       src={props.card.img}\n                   />\n               </Link>\n                <CardHeader\n                    title={props.card.title}\n                    style={{backgroundColor:\"whitesmoke\"}}\n                    action={\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    }\n                />\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent\n                        style={{backgroundColor:\"whitesmoke\"}}\n                    >\n                        <Typography>\n                            {props.card.description}\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </CardActionArea>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/primes.72a2f33f.jpg\";","export default __webpack_public_path__ + \"static/media/sort.117e08fc.png\";","export default __webpack_public_path__ + \"static/media/queen.b2332ba3.PNG\";","export default __webpack_public_path__ + \"static/media/binaryTree.6d8ce938.png\";","export default __webpack_public_path__ + \"static/media/convexHull.2720e7cd.png\";","import React, {Component} from 'react';\nimport ImgMediaCard from \"./card\";\nimport ImgMediaCard2 from \"./card2\";\nimport \"./style.css\";\nimport {Link} from \"react-router-dom\";\nimport graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\"\nimport sort from \"./sort.png\"\nimport queen from './images/queen.PNG'\nimport binSearch from './images/binaryTree.png'\nimport {getDetails} from \"./cardDetails\";\nimport TextField from \"@material-ui/core/TextField\";\nclass Cards extends Component {\n\n    state = {\n        cards:[],\n        filter:\"\"\n    }\n\n    componentDidMount() {\n        this.setState({cards:getDetails()});\n    }\n    getData = (e)=>{\n        console.log(e.target.value);\n        this.setState({filter:e.target.value});\n    }\n    render() {\n        return (\n           <React.Fragment>\n               <div className=\"d-flex justify-content-end Cards\">\n                   <TextField\n                       id=\"standard-basic\" label=\"Search\"\n                       color=\"secondary\"\n                       onChange={this.getData}\n                   />\n               </div>\n               <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5\" >\n                   {\n                       this.state.cards.filter((card) => card.title.toLowerCase().includes(this.state.filter.toLowerCase())||card.description.toLowerCase().includes(this.state.filter.toLowerCase())).map(card=>(\n                           <div>\n                               <ImgMediaCard2\n                                   className=\"d-flex flex-wrap\"\n                                   key={card.id}\n                                   card={card}/>\n                           </div>\n                       ))\n                   }\n\n               </div>\n           </React.Fragment>\n        );\n    }\n}\n\nexport default Cards;\n/*\n<div>\n   <ImgMediaCard2\n       className=\"d-flex flex-wrap\"\n       key={card.id}\n       card={card}/>\n</div>\n */","import graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\";\nimport sort from \"./sort.png\";\nimport queen from \"./images/queen.PNG\";\nimport binSearch from \"./images/binaryTree.png\";\nimport convex from './images/convexHull.png';\n\nexport function getDetails() {\n    return [\n        {\n            id: 1,\n            title: \"Pathfinder\",\n            description: \"Visualize graph algorithms like dijkstra, BFS, DFS\",\n            route: \"/pathfinder\",\n            img: graph\n        },\n        {\n            id: 2,\n            title: \"Prime Numbers\",\n            description: \"Visualize how Seive is better than brute force\",\n            route: \"/prime\",\n            img: primes\n        },\n        {\n            id: 3,\n            title: \"Sorting Algorithm\",\n            description: \"Compare different sorting algorithms\",\n            route: \"/sort\",\n            img: sort\n        },\n        {\n            id: 9,\n            title: \"Recursive Sorting\",\n            description: \"Compare different recursive sorting algorithms\",\n            route: \"/recursivesort\",\n            img: sort\n        },\n        {\n            id: 4,\n            title: \"N Queen\",\n            description: \"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\n            route: \"/nqueen\",\n            img: queen\n        },\n        {\n            id: 5,\n            title: \"Convex Hull\",\n            description: \"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\n            route: \"/convexhull\",\n            img: convex\n        },\n        {\n            id: 7,\n            title: \"Binary Search\",\n            description: \"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\n            route: \"/binarysearch\",\n            img: binSearch\n        }\n\n    ]\n}","import React, { Component } from 'react';\nimport GitHubButton from 'react-github-btn'\nimport \"./style.css\";\nconst Footer = () => {\n    return (\n        <footer class=\"page-footer font-small special-color-dark pt-4 \">\n\n            <div className='flex-wrap' style={{ textAlign: \"center\" }}>\n                <div className='m-2'><GitHubButton href=\"https://github.com/TamimEhsan\" data-show-count=\"true\" aria-label=\"Follow @TamimEhsan on GitHub\">Follow @TamimEhsan</GitHubButton></div>\n                <GitHubButton href=\"https://github.com/TamimEhsan/Pathfinder-2.0\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star TamimEhsan/Pathfinder-2.0 on GitHub\">Star</GitHubButton>\n                &nbsp\n                <GitHubButton href=\"https://github.com/TamimEhsan/Pathfinder-2.0/fork\" data-icon=\"octicon-repo-forked\" data-show-count=\"true\" aria-label=\"Fork TamimEhsan/Pathfinder-2.0 on GitHub\">Fork</GitHubButton>\n                &nbsp\n                <img src=\"https://hitcounter.pythonanywhere.com/count/tag.svg\" alt=\"Hits\" />\n            </div>\n\n            <div class=\"footer-copyright text-center py-3\">Made with ❤️ by\n                <a href=\"https://github.com/tamimehsan\" style={{ color: \"#65b6f0\" }}> Mishal Gupta</a>\n            </div>\n\n        </footer>\n    );\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport Navbar from \"./navbar\";\nimport Greet from \"./greet\";\nimport TypeWriterC from \"./typewriter\";\nimport Cards from \"./cards\";\nimport Footer from \"./footer\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Greet/>\n                <TypeWriterC/>\n                <Cards/>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './cell.css';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClass()}>\n                <span >\n                    {this.props.cell.val}\n                </span>\n            </div>\n        );\n    }\n    getClass = () =>{\n        const { val, isVisiting,isChecking,isPrime} = this.props.cell;\n        if(isPrime){\n            return \"cell cell-prime m-2\";\n        }else if( isVisiting ){\n            return \"cell cell-visiting m-2\";\n        } else if( isChecking ){\n            return \"cell cell-check m-2\";\n        } else{\n            return \"cell m-2\";\n        }\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport './cells.css'\nclass Cells extends Component {\n\n    render() {\n        return (\n            <div className=\"Cells\">\n                {this.props.cells.map( (cell,cellidx)=>{\n                    return (\n                        <Cell\n                            key={cellidx}\n                            cell={cell}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Cells;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Sieve</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n                marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.isDisabled}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('1');\n\n    const handleChange = (event) => {\n        setAge(event.target.value);\n        //props.onAlgoChanged(event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={1} style={{selected:true}} >Seive</MenuItem>\n                    <MenuItem value={2}>Brute Force(NA)</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\n                <SimpleSelect/>\n                <DiscreteSlider\n                    onChange={this.props.onChangeSpeed}\n                    title=\"speed\"\n                    marks={false}\n                    default={10}\n                    step={1}\n                    min={10}\n                    max={50}\n                    isDisabled={false}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeValues}\n                    title=\"Total Number\"\n                    marks={false}\n                    default={100}\n                    step={1}\n                    min={10}\n                    max={500}\n                    isDisabled={this.props.isDisabled}\n                />\n                <button className=\"btn btn-warning btn-lg m-2\" onClick={this.props.onVisualize} disabled={this.props.isDisabled} style={this.isClickable()}>Visualize</button>\n\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.isDisabled ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport DiscreteSlider from \"./slider\";\nimport Menu from \"./menu\";\n\nclass Seive extends Component {\n    state = {\n        number: 100,\n        cells:[],\n        isRunning:false,\n        speed:500\n    }\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const cells = getCells(this.state.number);\n        this.setState({cells});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onChangeSpeed={this.changeSpeed}\n                    onChangeValues={this.handleValueIncease}\n                    onVisualize = {this.startSeive}\n                    onRefresh = {this.handleRefresh}\n                    isDisabled = {this.state.isRunning}\n                />\n                <Cells\n                    num={this.state.number}\n                    cells={this.state.cells}\n                />\n\n            </div>\n        );\n    }\n\n    changeSpeed = (speed) => {\n        //console.log(typeof speed);\n        this.setState({speed:600-speed*10});\n    }\n    handleValueIncease = (value) => {\n        this.setState({number:value});\n        this.setState({cells:getCells(value),isRunning:false});\n        console.log(value);\n    }\n    handleRefresh = () => {\n        this.setState({cells:getCells(this.state.number),isRunning:false});\n    }\n    startSeive = async () => {\n        const speed = this.state.speed;\n        this.setState({isRunning:true});\n        const prime = [];\n        for(let i = 0;i<=this.state.number;i++){\n            prime.push(1);\n        }\n        prime[0] = prime[1] = 0;\n        let changedCells = this.state.cells;\n        let prevCheck = -1;\n        let counter = 0;\n        for( let i = 2; i<=this.state.number;i++){\n            if( prime[i] === 1 ){\n             //   setTimeout(()=>{\n                    changedCells = getNewCellPrimeToggled(changedCells,i-1);\n                    this.setState({cells:changedCells});\n                //},counter*speed);\n                await sleep(this.state.speed);\n                counter++;\n                for(let j = i*i;j<=this.state.number;j+=i){\n                    //setTimeout(()=>{\n                        if( prevCheck!=-1 ){\n                            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        }\n                        prevCheck = j-1;\n                        changedCells = getNewCellCheckToggled(changedCells,j-1);\n                        changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        this.setState({cells:changedCells});\n                  //  },counter*speed);\n                    await sleep(this.state.speed);\n                    counter++;\n                    prime[j] = 0;\n                }\n            }\n        }\n      //  setTimeout(()=>{\n            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n            this.setState({cells:changedCells,isRunning:false});\n       // },counter*speed);\n    }\n}\n\nconst getNewCellPrimeToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isPrime:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellVisitingToggled = (cells,pos)=>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isVisiting:!cell.isVisiting\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellCheckToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isChecking:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getCells = (rows)=>{\n    const cells = [];\n    for(let cell = 1;cell<=rows;cell++){\n        cells.push(createCell(cell))\n    }\n    return cells;\n}\nconst createCell = (val)=>{\n    return {\n        val,\n        isChecking:false,\n        isVisiting:false,\n        isPrime:false\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Seive;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    background:this.checkColor(),\n                    margin:this.props.marg\n                }}\n            >\n                \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"red\";\n        } else{\n            return \"black\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","let values = [];\n\nexport function quickSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    for(var i=0;i<=sz;i++){\n        values.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    xx:it,\n                    yy:j,\n                    changed:true\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            xx:it+1,\n            yy:right,\n            changed:true\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\n                    <MenuItem value={1}>Selection Sort</MenuItem>\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\n                    <MenuItem value={3}>Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"off\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels(props) {\n    const [state, setState] = React.useState({\n        checkedA: false,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.onDoubleChange(event.target.checked);\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"Duo\"\n                disabled={props.disable}\n            />\n\n        </FormGroup>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport CustomizedSlider from \"./airBnbSlider\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Randomize\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <SwitchLabels\n                    disable={this.props.disable}\n                    onDoubleChange={this.props.onDoubleChange}\n                />\n                <SimpleSelect\n                    pos={1}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport {bubbleSort,selectionSort,insertionSort} from \"../algorithms/sortingAlgorithms\";\nimport {quickSort} from \"../algorithms/quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Sort extends Component {\n  state = {\n      count:20,\n      rects: [],\n      rects2: [],\n      doubles:false,\n      speed:50,\n      isRunning:false,\n      isRunning1:false,\n      isRunning2:false,\n      algo1:0,\n      algo2:0\n  }\n  constructor() {\n      super();\n  }\n  componentDidMount() {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n\n    render() {\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <Menu\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' justify-content-center'>\n\n                <Rects\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n        </React.Fragment>\n    );\n  }\n  handleRandomize = () => {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n  handleRefresh = () =>{\n      const rects = this.state.rects;\n      for(let i=0;i<rects.length;i++){\n          const rect = {...rects[i],isSorted:false, isSorting:false}\n          rects[i] = rect;\n      }\n      const rects2 = rects.slice();\n      this.setState({rects,rects2});\n  }\n\n  handleDouble = (val) =>{\n      this.setState({doubles:val});\n  }\n  handleCountChange = (val) => {\n      this.setState({count:val});\n      this.handleRandomize();\n  }\n  handleAlgoChanged = (pos,val) =>{\n      if( pos === 0 ){\n          this.setState({algo1:val});\n      } else{\n          this.setState({algo2:val});\n      }\n  }\n  handleSpeedChanged = (val) =>{\n    const speed = (110-val);\n    this.setState({speed});\n  }\n  handleSort = () =>{\n\n      this.setState({isRunning:true});\n      let steps1;\n      switch (this.state.algo1){\n          case 0:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n          case 1:\n              steps1 = selectionSort(this.state.rects);\n              break;\n          case 2:\n              steps1 = insertionSort(this.state.rects);\n              break;\n          case 3:\n              steps1 = quickSort(this.state.rects2);\n              console.log(steps1)\n              break;\n          default:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n      }\n      let steps2;\n      if( this.state.doubles ){\n\n          switch (this.state.algo2){\n              case 0:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n              case 1:\n                  steps2 = selectionSort(this.state.rects2);\n                  break;\n              case 2:\n                  steps2 = insertionSort(this.state.rects2);\n                  break;\n              case 3:\n                  steps2 = quickSort(this.state.rects2);\n                  break;\n              default:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n          }\n\n      }\n      this.handleFirst(steps1);\n      if( this.state.doubles ) this.handleSecond(steps2);\n  }\n  handleFirst = async (steps) =>{\n     // console.log(\"fsdfsdfsdfasdf\");\n      this.setState({isRunning1:true});\n      const {speed} = this.state;\n     // const steps = bubbleSort(this.state.rects);\n    //  console.log(steps.length);\n      const prevRect = this.state.rects;\n      for(let i = 0;i<steps.length;i++){\n       //   setTimeout(()=>{\n              if( i!==0 ){\n                  prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                  prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n              }\n              if(steps[i].xx===steps[i].yy){\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n              }else if( steps[i].changed ){\n                  const recti = {...prevRect[steps[i].xx],isSorting:true};\n                  const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                  prevRect[steps[i].yy] = recti;\n                  prevRect[steps[i].xx] = rectj;\n              } else{\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n              }\n              if(i === steps.length-1){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n              }\n             /* if( i === (steps.length)-2 ){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n              }*/\n              this.setState({rects:prevRect});\n              await sleep(this.state.speed);\n         // },i*speed);\n      }\n  }\n    handleSecond = async (steps) =>{\n        const {speed} = this.state;\n        this.setState({isRunning2:true});\n        const prevRect = this.state.rects2;\n        for(let i = 0;i<steps.length;i++){\n         //   setTimeout(()=>{\n                if( i!==0 ){\n                    prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                    prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n                }\n                if(steps[i].xx===steps[i].yy){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n                }else if( steps[i].changed ){\n                    const recti = {...prevRect[steps[i].xx],isSorting:true};\n                    const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                    prevRect[steps[i].yy] = recti;\n                    prevRect[steps[i].xx] = rectj;\n                } else{\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n                }\n                if( i === steps.length-1 ){\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }\n               /* if( i === (steps.length)-2 ){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }*/\n                this.setState({rects2:prevRect});\n                await sleep(this.state.speed);\n           // },i*speed);\n        }\n    }\n\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for(let i = 0;i<tot;i++){\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n  return {\n      width: Math.floor(Math.random() * 200)+50,\n      isSorted:false,\n      isSorting:false\n  }\n}\nexport default Sort;\n","export default __webpack_public_path__ + \"static/media/queen.a967028b.png\";","import React, {Component} from 'react';\nimport './style.css'\nimport queen from './queen.png';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClassName()} style={this.getStyled()}>\n                { this.props.cell.isPresent && <img src={queen} height='100px' style={{padding:\"25px\"}}/> }\n            </div>\n        );\n    }\n    getClassName = ()=>{\n        if(this.props.cell.isAttacked){\n            return \"boardCell attacked\";\n        } else if(this.props.cell.isCurrent){\n            return \"boardCell current\";\n        }else if(this.props.cell.isPresent){\n            return \"boardCell present\";\n        }else if(this.props.cell.isChecked){\n            return \"boardCell checked\";\n        } else{\n            return \"boardCell\";\n        }\n    }\n    getStyled = () =>{\n        if( (this.props.cell.row+this.props.cell.col)%2 === 0 ){\n            return {\n                backgroundColor:\"white\"\n            }\n        }else{\n            return {\n                backgroundColor:\"grey\"\n            }\n        }\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport './style.css';\nclass Cells extends Component {\n    render() {\n        return (\n            <div className='booard m-5' >\n                {this.props.board.map( (row,rowidx)=>{\n                    return(\n                        <div key={rowidx}>\n                            {row.map( (cell,cellidx)=>{\n                                return(\n                                    <Cell\n                                        key={cellidx}\n                                        cell={cell}/>\n                                );\n                            } )}\n                        </div>\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Cells;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">N Queen</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onClear}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Clear Board\n                </button>\n\n                <DiscreteSlider\n                    default={4}\n                    min={1}\n                    max={8}\n                    step={1}\n                    title=\"Grid size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={1}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                />\n\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Queen extends Component {\n    state={\n        board:[],\n        number:4,\n        speed:490,\n        isRunning:false\n    }\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const board = getBoard(this.state.number);\n       // board[3][3].isPresent = true;\n        this.setState({board});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onSpeedChange={this.handleSpeedChange}\n                    onCountChange={this.handleQueenChange}\n                    onViusalize={this.startAlgo}\n                    disable={this.state.isRunning}\n                    onClear={this.handleClear}\n                    onStop={this.handleStop}\n                />\n                <div style={{textAlign:\"Center\"}}>\n                    <Cells\n                        board={this.state.board}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    handleStop =() =>{\n        this.setState({isRunning:false});\n    }\n\n    handleSpeedChange = (val)=>{\n        const speed = (100-val)*10;\n        this.setState({speed});\n    }\n    handleQueenChange = (number)=>{\n        this.setState({number});\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleClear = () => {\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleTurnOff =  () => {\n        const newBoard = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard});\n    }\n    startAlgo = async ()=>{\n        this.setState({isRunning:true});\n        const newBoard = this.state.board.slice();\n        await this.queensAlgo(newBoard,0);\n        const newBoard2 = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard2,isRunning:false});\n    }\n    queensAlgo =  async (board,col) => {\n\n        if( col>=this.state.number ){\n            return true;\n        }\n\n        let newBoard = board.slice();\n        for( let i = 0; i < this.state.number;i++ ){\n\n\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            const result = getChecked(newBoard,i,col,this.state.number);\n            newBoard = result[0];\n\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n            if( result[1] ){\n                const res = await this.queensAlgo(newBoard,col+1)\n                if( res === true){\n                    return true;\n                }\n                newBoard[i][col] = {...newBoard[i][col],isPresent:true,isCurrent:true};\n                this.setState({board:newBoard});\n                await sleep(this.state.speed);\n                newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n                this.setState({board:newBoard});\n\n            }\n            newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n        }\n        return false;\n    }\n\n}\n\nexport default Queen;\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst turnOffAttack = (board,N) =>{\n    const newBoard = board.slice();\n    for( let i = 0;i<N; i++ ){\n        for( let j = 0;j<N;j++ ){\n            newBoard[i][j] = {...newBoard[i][j],isChecked:false, isAttacked:false,isCurrent:false};\n        }\n    }\n    return newBoard;\n}\n\nconst getChecked = (board,row,col,N) =>{\n    const newBoard = board.slice();\n    let pos = true;\n    // same col\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[row][i].isPresent ){\n            newBoard[row][i] = {...newBoard[row][i],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[row][i] = {...newBoard[row][i],isChecked:true};\n        }\n    }\n    // same row\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[i][col].isPresent ){\n            newBoard[i][col] = {...newBoard[i][col],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][col] = {...newBoard[i][col],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i >= 0 && j >= 0; i--, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j >= 0; i++, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j < N; i++, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i>=0 && j < N; i--, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n\n    newBoard[row][col] = {...newBoard[row][col],isPresent:true,isCurrent:true};\n\n    return [newBoard,pos];\n}\nconst getBoard = (N) =>{\n    const rows = [];\n    for( let i = 0;i<N;i++ ){\n        const cols = [];\n        for(let j =0;j<N;j++){\n            cols.push(getCell(i,j));\n        }\n        rows.push(cols);\n    }\n    return rows;\n}\n\nconst getCell = (row,col)=>{\n    return{\n        row,\n        col,\n        isPresent:false,\n        isChecked:false,\n        isAttacked:false,\n        isCurrent:false\n    }\n}","import React, {Component} from 'react';\n\nclass MyTimer extends Component {\n    state={\n        time:0,\n        going:false,\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if( prevProps.onGoing!==this.props.onGoing ){\n            this.setState({going:this.props.onGoing});\n            if( this.props.onGoing ){\n                this.startCount();\n            }\n        }\n    }\n    startCount = async () => {\n        while (this.props.onGoing){\n            this.setState({time:this.state.time+1});\n            if( this.state.time>10){\n                this.setState({time:0});\n                this.props.onStop();\n            }\n            await sleep(100);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>\n                    <span className='badge badge-danger'>\n                    {this.state.time}\n                </span>\n                </h2>\n            </div>\n        );\n    }\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default MyTimer;","export function convex_hull(points){\n    if( points.size === 1 ){\n        return;\n    }\n    const pointStart = points[0];\n    const pointEnd = points[ points.length-1 ];\n    const up = [], down = [];\n    const pairs = [];\n    const lines=[];\n    up.push( pointStart);\n    down.push(pointStart);\n    for( let i = 1; i< points.length ;i++ ){\n        if( (i === (points.length - 1)) || cw( pointStart,points[i],pointEnd ) ){\n            while( up.length >=2 && !cw(up[up.length-2],up[up.length-1],points[i] ) ){\n                lines.push({\n                    from:up[up.length-2],\n                    to:up[up.length-1],\n                    add:false\n                });\n                up.pop();\n            }\n            up.push( points[i] );\n            lines.push({\n                from:up[up.length-2],\n                to:up[up.length-1],\n                add:true\n            })\n        }\n\n    }\n    for(let i = 0; i< points.length;i++){\n        if( (i === (points.length - 1)) || ccw( pointStart,points[i],pointEnd ) ){\n            while( down.length >=2 && !ccw(down[down.length-2],down[down.length-1],points[i] ) ){\n                lines.push({\n                    from:down[down.length-2],\n                    to:down[down.length-1],\n                    add:false\n                });\n                down.pop();\n            }\n            down.push( points[i] );\n            lines.push({\n                from:down[down.length-2],\n                to:down[down.length-1],\n                add:true\n            })\n        }\n    }\n\n    for (let i = 0; i < up.length; i++){\n        pairs.push(up[i]);\n    }\n    for (let i = down.length - 2; i > 0; i--) {\n        pairs.push(down[i]);\n    }\n    return [pairs,lines];\n}\n\nfunction cw(a, b, c) {\n    const f = a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy);\n    if( a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy) < 0 ){\n        return true;\n    } else{\n        return false;\n    }\n\n}\n\nfunction ccw(a, b, c){\n    if( a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0 ){\n        return true;\n    } else {\n        return false;\n    }\n\n}","import React, {Component} from 'react';\nimport './style.css';\nimport {convex_hull} from \"../algorithms/grahamScan\";\nclass Canvas extends Component {\n    state={\n        dots:[],\n        lines:[],\n        canvasWidth:300,\n        canvasHeight:100\n    }\n    constructor(props) {\n        super(props);\n        this.setState({canvasWidth:window.innerWidth});\n        this.setState({canvasHeight:window.innerHeight-10});\n        console.log(window.innerWidth);\n        this.myRef = React.createRef();\n        this.canvasLineRef = React.createRef();\n    }\n    componentDidMount() {\n        this.redrawDots();\n       // console.log(this.state.canvasWidth);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if( this.props.dots!==prevProps.dots ){\n            this.setState({dots:this.props.dots});\n            this.redrawDots();\n        }\n        if( this.props.onGoing!==prevProps.onGoing ){\n            if( this.props.onGoing === true ){\n                this.animateLine();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div style={{textAlign:\"center\"}}>\n                <div className=\"containerz\">\n                    <canvas\n                        className='canvas'\n                        id='canvas1'\n                        style={{backgroundColor:\"whitesmoke\"}}\n                        ref={this.canvasLineRef} width={window.innerWidth} height={window.innerHeight-200} />\n                    <canvas\n                        className='canvas'\n                        id='canvas2'\n                        // style={{backgroundColor:\"grey\"}}\n                        ref={this.myRef} width={window.innerWidth} height={window.innerHeight-200}\n                    />\n\n                </div>\n            </div>\n        );\n    }\n\n    redrawDots(){\n        const canvas = this.myRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = 'lightgrey';\n        ctx.strokeStyle = 'black';\n        for( let i = 0; i<this.props.dots.length;i++ ){\n            ctx.beginPath();\n           // ctx.moveTo(this.props.dots[i].xx, this.props.dots[i].yy)\n            ctx.arc(this.props.dots[i].xx, this.props.dots[i].yy, 10, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.lineWidth = 2;\n            ctx.stroke();\n            ctx.closePath();\n\n        }\n        ctx.closePath();\n        const res = convex_hull(this.props.dots);\n\n        const cansvas2 = this.canvasLineRef.current;\n        const ctx2 = cansvas2.getContext('2d');\n        ctx2.clearRect(0, 0, canvas.width, canvas.height);\n        this.setState({lines:res[1]});\n\n    }\n\n    animateLine = async () => {\n        const {lines} = this.state;\n        const canvas2 = this.canvasLineRef.current;\n        const ctx2 = canvas2.getContext('2d');\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n        ctx2.fillStyle = '#ffffff';\n        ctx2.strokeStyle = '#ffffff';\n        for( let i = 0; i<lines.length;i++ ){\n            if( !this.props.onGoing ){\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n                return;\n            }\n            ctx2.beginPath();\n            if( lines[i].add ){\n                ctx2.beginPath();\n                ctx2.lineWidth = 2;\n                ctx2.fillStyle = 'black';\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 14, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.beginPath();\n                ctx2.fillStyle = 'red';\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 14, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.beginPath();\n                ctx2.lineWidth = 2;\n                ctx2.strokeStyle = '#000000';\n            } else{\n                ctx2.beginPath();\n                ctx2.fillStyle = 'whitesmoke';\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 15, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.beginPath();\n                ctx2.fillStyle = 'whitesmoke';\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 15, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.lineWidth = 4;\n                ctx2.strokeStyle = 'whitesmoke';\n            }\n\n            ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\n            ctx2.lineTo(lines[i].to.xx, lines[i].to.yy);\n            ctx2.stroke();\n            ctx2.closePath();\n            if( i === lines.length - 1 ){\n                this.props.onTurnOff();\n            }\n            await sleep(this.props.speed);\n        }\n    }\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Canvas;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Convex Hull</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n                marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.isDisabled}\n            />\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\n                <DiscreteSlider\n                    onChange={this.props.onChangeSpeed}\n                    title=\"speed\"\n                    marks={false}\n                    default={10}\n                    step={1}\n                    min={10}\n                    max={50}\n                    isDisabled={false}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeValues}\n                    title=\"Total Number\"\n                    marks={false}\n                    default={50}\n                    step={1}\n                    min={10}\n                    max={200}\n                    isDisabled={this.props.isDisabled}\n                />\n                <button\n                    className=\"btn btn-warning btn-lg m-2\"\n                    onClick={this.props.onVisualize}\n                    disabled={this.props.isDisabled}\n                    style={this.isClickable()}\n                >\n                    Visualize Graham Scan\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.isDisabled ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport MyTimer from \"./timer\";\nimport Canvas from \"./canvas\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nclass ConvexHull extends Component {\n    state={\n        dots:[],\n        lines:[],\n        isALgoLive:false,\n        width:100,\n        height:100,\n        isRunning:false,\n        speed:100,\n        number:50\n\n    }\n    constructor() {\n        super();\n        this.setState({width:window.innerWidth,height:window.innerHeight-200});\n    }\n    componentDidMount() {\n        this.setState({width:window.innerWidth,height:window.innerHeight-100});\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onRefresh={this.handleRefreshDots}\n                    onVisualize={this.handleVisualize}\n                    onChangeSpeed={this.changeSpeed}\n                    onChangeValues={this.handleValueIncease}\n                />\n                <Canvas\n                    width={this.state.width}\n                    height={this.state.height}\n                    dots={this.state.dots}\n                    onTurnOff={this.handleTurnOff}\n                    onGoing={this.state.isRunning}\n                    speed={this.state.speed}\n                />\n            </div>\n        );\n    }\n    handleValueIncease = (value) => {\n        this.setState({number:value});\n        this.handleRefreshDots();\n    }\n    changeSpeed = (speed) => {\n        //console.log(typeof speed);\n        this.setState({speed:600-speed*10});\n    }\n    handleAlgoStateChanged = (val) => {\n        this.setState({isAlgoLive:val});\n    }\n    handleVisualize = () =>{\n        this.setState({isRunning:true});\n    }\n    handleTurnOff = () =>{\n        this.setState({onGoing:false});\n    }\n    handleRefreshDots = () =>{\n        this.setState({isRunning:false});\n        this.setState({dots:getNewDots(this.state.number)});\n    }\n\n    handleMoreDot = () =>{\n        const row = Math.floor(Math.random()*400)+10;\n        const col = Math.floor(Math.random()*400)+10;\n        const dot = {\n            row:row,\n            col:col\n        }\n        const dots = this.state.dots;\n        dots.push(dot);\n        this.setState(dots);\n    }\n}\nfunction getNewDots(number){\n    const dots= [];\n    for(let  i = 0; i<number;i++){\n        dots.push(getDot());\n    }\n    dots.sort( (a,b) => {\n       if( a.xx!==b.xx ){\n           return a.xx-b.xx;\n       } else{\n           return a.yy - b.yy;\n       }\n    } );\n    return dots;\n}\nfunction getDot(){\n    const width = window.innerWidth-50;\n    const height = window.innerHeight-250;\n    const rowpos = Math.floor( Math.random()*height )+25;\n    const colpos = Math.floor(Math.random()*width)+25;\n    return {\n        xx:colpos,\n        yy:rowpos,\n    }\n}\nexport default ConvexHull;","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass EntryPoint extends Component {\n    state={\n        error:false\n    }\n    render() {\n        return (\n            <div>\n                <TextField\n                    error={this.state.error}\n                    id=\"standard-error-helper-text\"\n                    label=\"Upper Number\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    onChange={this.getData}\n                /> <br /><br />\n                <h1>\n                    Guess a number between 0 and {this.props.upper}\n                </h1>\n                <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.startGame}\n                >\n                    Start the game\n                </button>\n            </div>\n        );\n    }\n    getData = (e)=>{\n        if( e.target.value!== \"\" ){\n            console.log(e.target.value);\n            this.props.setUpper(e.target.value);\n        }\n        else{\n            this.props.setUpper(100)\n        }\n    }\n    validateNumbers = () =>{\n\n    }\n}\n\nexport default EntryPoint;","import React, {useEffect} from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 400,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        width: 400,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([props.lower, props.upper]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n    useEffect(()=>{\n        setValue([props.lower,props.upper]);\n    },[props.lower,props.upper])\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"on\"\n                max={props.max}\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Binary Search\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport RangeSlider from \"./doubleSlider\";\n\nclass Guess extends Component {\n    render() {\n        return (\n            <div >\n\n                <p>\n\n                    <button className=\"btn btn-secondary btn-lg\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        Toggle Range\n                    </button>\n                </p>\n                <div className=\"collapse\" id=\"collapseExample\">\n                    <div className=\"card card-body\">\n                        <center style={{justifyContent:\"center\"}}>\n                            <RangeSlider\n                                upper={this.props.upper}\n                                lower={this.props.lower}\n                                max={this.props.max}\n                            />\n                        </center>\n                    </div>\n                </div>\n\n               <h1>\n                    Is you number greater than {this.getMid()}?\n                </h1> <br />\n                <button\n                    className='btn btn-lg btn-success m-2'\n                    onClick={this.props.yesButton}\n                >Yes</button>\n                <button\n                    className='btn btn-lg btn-danger m-2'\n                    onClick={this.props.noButton}\n                >No</button> <br/>\n            </div>\n        );\n    }\n    getMid = () => {\n        const mid = Math.floor( (this.props.upper+this.props.lower)/2);\n        return mid;\n    }\n}\n\nexport default Guess;","import React, {Component} from 'react';\n\nclass Result extends Component {\n    render() {\n        return (\n            <div>\n                <span className='display-3'>\n                    Your number is {this.props.res}\n                </span> <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.onRestart}\n                >\n                    Restart\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Result;","import React, {Component} from 'react';\nimport Guess from \"./guess\";\nimport Result from \"./result\";\n\nclass Search extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.upper !== this.props.lower &&\n                <Guess\n                    yesButton={this.props.yesButton}\n                    noButton={this.props.noButton}\n                    upper={this.props.upper}\n                    lower={this.props.lower}\n                    max={this.props.max}\n                />\n                }\n                {this.props.upper === this.props.lower &&\n                   <Result\n                       res={this.props.upper}\n                       onRestart={this.props.onRestart}\n                   />\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default Search;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Binary Search Game</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport EntryPoint from \"./entryPoint\";\nimport Search from \"./search\";\nimport Navbar from \"./navbar\";\n\nclass BinarySearch extends Component {\n    state={\n        upper:100,\n        lower:0,\n        max:100,\n        isRunning:false\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <br />\n                <br />\n                <br />\n            <center>\n                {!this.state.isRunning &&\n                <EntryPoint\n                    startGame={this.handleStartGame}\n                    upper={this.state.upper}\n                    setUpper={this.handleSetUpper}\n                /> }\n                {this.state.isRunning &&\n                <Search\n                    yesButton={this.handleYes}\n                    noButton={this.handleNo}\n                    upper={this.state.upper}\n                    lower={this.state.lower}\n                    max={this.state.max}\n                    onRestart={this.handleRestart}\n                />\n                }\n            </center>\n            </div>\n        );\n    }\n    handleStartGame = () =>{\n        this.setState({isRunning:true});\n    }\n    handleRestart = () =>{\n        this.setState({isRunning:false,upper:100,lower:0});\n    }\n    handleYes = () =>{\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\n        this.setState({lower:mid+1});\n    }\n    handleNo = () =>{\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\n        this.setState({upper:mid});\n    }\n    handleSetUpper = (up) =>{\n        let val = parseInt(up);\n        if( val<=0 ){\n            val = 100;\n        }\n        this.setState({upper:val,max:val});\n    }\n}\n\nexport default BinarySearch;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    border: this.checkBorder(),\n                    background:this.checkColor(),\n                    margin:this.props.marg\n\n\n                }}\n            >\n                \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"orange\";\n        } else if( this.props.rect.isLeft ){\n            return \"red\";\n        } else if(this.props.rect.isRight){\n            return \"purple\";\n        }else{\n            return \"#ADD8E6\";\n        }\n    }\n    checkBorder = () =>{\n        if( this.props.rect.isRange ){\n            return \"0px solid black\";\n        } else{\n            return \"0px\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","let values = [];\nexport default function mergeSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    mergeS(rects,0,sz);\n    return values;\n}\n\nfunction merge(rects, l, m, r){\n  //  console.log(l,\" \",r);\n    let n1 = m-l+1;\n    let n2 = r-m;\n\n    const L = rects.slice(l, m+1);\n    const R = rects.slice(m+1,r+1);\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while(i<n1 && j<n2){\n        if( L[i].width <= R[j].width ){\n            rects[k] = L[i];\n            i++;\n        } else{\n            rects[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        rects[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        rects[k] = R[j];\n        j++;\n        k++;\n    }\n\n}\n\nfunction mergeS(rects,l,r){\n\n    if( l>=r ) return;\n    let m = l+ (r-l)/2;\n    m = Math.floor(m);\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n    mergeS(rects,l,m);\n    mergeS(rects,m+1,r);\n    merge(rects,l,m,r);\n    let rectsCopy = rects.slice(l,r+1);\n    let value = {\n        left:l,\n        right:r,\n        mid:m,\n        val:rectsCopy\n    }\n    values.push(value);\n}","let values = [];\nexport default function HeapSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // sz = sz-1;\n    heapSort(rects,sz);\n    return values;\n}\nfunction heapify(rects,n,i){\n    let largest = i; // Initialize largest as root\n    let l = 2 * i + 1; // left = 2*i + 1\n    let r = 2 * i + 2; // right = 2*i + 2\n\n    // If left child is larger than root\n    if (l < n && rects[l].width > rects[largest].width)\n        largest = l;\n\n    // If right child is larger than largest so far\n    if (r < n && rects[r].width > rects[largest].width)\n        largest = r;\n\n    // If largest is not root\n    if (largest != i) {\n        let temp = rects[i];\n        rects[i] = rects[largest];\n        rects[largest] = temp;\n        let value = {\n            left:i,\n            right:largest,\n            sorted: false\n        }\n        values.push(value);\n        // Recursively heapify the affected sub-tree\n        heapify(rects, n, largest);\n    }\n}\nfunction heapSort(rects,n){\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\n      //  console.log(\"heap \",n,\" \",i);\n        heapify(rects,n,i);\n    }\n    for (let i = n-1 ; i > 0; i--) {\n        // Move current root to end\n        let temp = rects[i];\n        rects[i] = rects[0];\n        rects[0] = temp;\n        let value = {\n            left:i,\n            right:0,\n            sorted:true\n        }\n        values.push(value);\n        // call max heapify on the reduced heap\n        heapify(rects, i, 0);\n    }\n}\n","let values = [];\n\nexport function quickSortRecursive(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    values.push({\n        left,\n        right,\n        swap:false,\n        changedRange:true,\n    })\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    left:it,\n                    right:j,\n                    swap:true,\n                    changedRange:false,\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            left:it+1,\n            right:right,\n            swap:true,\n            changedRange:false,\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Recursive Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Merge Sort</MenuItem>\n                    <MenuItem value={1} style={{selected:true}} >Heap Sort</MenuItem>\n                    <MenuItem value={2} style={{selected:true}} >Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"off\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport CustomizedSlider from \"./airBnbSlider\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Randomize\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport mergeSort from '../algorithms/mergeSort';\nimport heapSort from \"../algorithms/heapSort\";\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass RecursiveSort extends Component {\n    state = {\n        count: 20,\n        rects: [],\n        speed: 50,\n        isRunning: false,\n        algo: 0\n    }\n\n    constructor() {\n        super();\n    }\n\n    componentDidMount() {\n        var rects = getInitialRects(this.state.count);\n        this.setState({rects});\n        /* var rects2 = rects.slice();\n         console.log(rects2);\n         rects = mergeSort(rects);\n         console.log(rects);*/\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Menu\n                    disable={this.state.isRunning}\n                    onViusalize={this.handleSort}\n                    onRandomize={this.handleRandomize}\n                    onRefresh={this.handleRefresh}\n                    onCountChange={this.handleCountChange}\n                    onAlgoChanged={this.handleAlgoChanged}\n                    onSpeedChange={this.handleSpeedChanged}\n                />\n                <div className=' justify-content-center'>\n                    <Rects\n                        rects={this.state.rects}\n                    />\n\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        this.setState({rects: rect});\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = {...rects[i], isSorted: false, isSorting: false}\n            rects[i] = rect;\n        }\n        this.setState({rects});\n    }\n    handleCountChange = (val) => {\n        this.setState({count: val});\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (110 - val);\n        this.setState({speed});\n    }\n\n    handleSort = () => {\n\n        this.setState({isRunning: true});\n        let steps;\n        let rects2;\n        switch (this.state.algo) {\n\n            case 0:\n                steps = mergeSort(this.state.rects);\n                this.handleMerge(steps);\n                break;\n            case 1:\n                rects2 = this.state.rects.slice();\n                steps = heapSort(rects2);\n                this.handleHeap(steps);\n                break;\n            case 2:\n                rects2 = this.state.rects.slice();\n                steps = quickSortRecursive(rects2);\n                this.handleQuick(steps);\n                break;\n            default:\n        }\n\n\n    }\n\n    handleQuick = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        let hasChanged = -1;\n        let changed;\n        for(let i=0;i<steps.length;i++){\n            let step = steps[i];\n            if( hasChanged!==-1 ){\n                let {left,right} = changed;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\n            }\n            if( step.changedRange ){\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                let {left,right} = step;\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                }\n                for (let j = left; j <=right; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\n                }\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\n                }\n            }else if(step.swap){\n                let {left,right} = step;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\n                let temp = prevRect[left];\n                prevRect[left] = prevRect[right];\n                prevRect[right] = temp;\n                hasChanged = 1;\n                changed = step;\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\n                }\n                this.setState({rects: prevRect});\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\n                    this.setState({rects: prevRect});\n                    await sleep(10);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleHeap = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n\n        for(let i = 0;i<steps.length;i++){\n            let step = steps[i];\n            //   console.log(step);\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n            let {left,right,sorted} = step;\n            prevRect[left] = {...prevRect[left],isLeft:true};\n            prevRect[right] = {...prevRect[right],isRight:true};\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            let temp = prevRect[left];\n            prevRect[left] = prevRect[right];\n            prevRect[right] = temp;\n            this.setState({rects: prevRect});\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleMerge = async (steps) => {\n        this.setState({isRunning1: true});\n\n        const {speed} = this.state;\n\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        await sleep(this.state.speed);\n      //  console.log(\"steps \", steps.length);\n        for (let ii = 0; ii < steps.length; ii++) {\n            let step = steps[ii];\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\n            for (let i = step.left; i <= step.mid; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\n            }\n            for (let i = step.mid + 1; i <= step.right; i++) {\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n          //  console.log(step);\n            for(let i= step.left;i<=step.right;i++){\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);\n            }\n\n            if (ii === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false});\n            }\n\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            prevRect = this.state.rects;\n          /*  for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\n            }*/\n            this.setState({rects: prevRect});\n        }\n    }\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false,\n        isLeft: false,\n        isRight: false\n    }\n}\n\nexport default RecursiveSort;","import React, { Component } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Pathfinder from \"./pathfinderComponents/pathfinder\";\nimport Home from \"./homeComponents/home\";\nimport Seive from \"./primeComponents/seive\";\nimport Sort from \"./sortComponents/sort\";\nimport Queen from \"./queenComponents/queen\";\nimport ConvexHull from \"./convexHullComponents/convexHull\";\nimport BinarySearch from \"./binarySearchComponent/binarySearch\";\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\n\nconst App = () => {\n    return (\n        <Router basename='/'>\n            <Switch>\n                <Route path='/pathfinder' component={Pathfinder} />\n                <Route path='/prime' component={Seive} />\n                <Route path='/sort' component={Sort} />\n                <Route path='/nqueen' component={Queen} />\n                <Route path='/convexhull' component={ConvexHull} />\n                <Route path='/binarysearch' component={BinarySearch} />\n                <Route path='/recursivesort' component={RecursiveSort} />\n                <Route path='/' component={Home} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'fontsource-roboto';\n\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}